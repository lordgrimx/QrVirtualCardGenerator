<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0-android;net8.0-ios;net8.0-maccatalyst</TargetFrameworks>
        <TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>MauiNfcReader</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>MauiNfcReader</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.yourcompany.qrvirtualcard</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<!-- To develop, package, and publish an app to the Microsoft Store, see: https://aka.ms/MauiTemplateUnpackaged -->
		<WindowsPackageType>None</WindowsPackageType>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">15.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">15.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>

		<!-- Android cihaz ARM64 olduğundan, Debug için arm64 binary üretelim -->
		<RuntimeIdentifiers Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">android-arm64</RuntimeIdentifiers>
		
		<!-- MAUI implicit package uyarılarını bastır -->
		<SkipValidateMauiImplicitPackageReferences>true</SkipValidateMauiImplicitPackageReferences>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiImage Update="Resources\Images\dotnet_bot.png" Resize="True" BaseSize="300,185" />
		
		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

  <!-- Not: Runtime'da env dosyaları BackendApiService tarafından okunacaktır. -->

	<ItemGroup>
		<!-- MAUI Controls paketi .NET 8 uyumlu versiyon -->
		<PackageReference Include="Microsoft.Maui.Controls" Version="8.0.90" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.1" />
		
		<!-- MVVM ve UI -->
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.2.2" />
		<PackageReference Include="CommunityToolkit.Maui" Version="7.0.1" />
		
		<!-- Logging ve Configuration -->
		<PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.1" />
		<PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
		<PackageReference Include="Microsoft.Extensions.Http" Version="8.0.0" />
		
		<!-- Kriptografi -->
		<PackageReference Include="System.Security.Cryptography.Algorithms" Version="4.3.1" />
	</ItemGroup>

	<!-- PCSC paketlerini iOS ve MacCatalyst dışında hedeflere ekle -->
	<ItemGroup Condition="'$(TargetFramework)' != 'net8.0-ios' and '$(TargetFramework)' != 'net8.0-maccatalyst'">
		<PackageReference Include="PCSC" Version="6.2.0" />
		<PackageReference Include="PCSC.Iso7816" Version="6.2.0" />
	</ItemGroup>

	<PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-android' and '$(Configuration)' == 'Release'">
		<AndroidLinkMode>SdkOnly</AndroidLinkMode>
	</PropertyGroup>

	<PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-android' and '$(Configuration)' == 'Debug'">
		<AndroidLinkMode>None</AndroidLinkMode>
	</PropertyGroup>

	<ItemGroup>
		<!-- PCSC servisini artık dahil ediyoruz -->
	</ItemGroup>

	<!-- iOS Release build'inde linker davranışını SdkOnly yap -->
	<PropertyGroup Condition="'$(TargetFramework)' == 'net8.0-ios' and '$(Configuration)' == 'Release'">
		<MtouchLink>SdkOnly</MtouchLink>
	</PropertyGroup>

</Project>
